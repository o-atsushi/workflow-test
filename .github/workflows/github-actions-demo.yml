name: Create Workato Role
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on: 
  push:
    branches: [ main ]
jobs:
  create-workato-role:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
      # „Åì„Åì„Åã„Çâ„Åå„ÉÜ„Çπ„ÉàÁî®„ÅÆË®≠ÂÆöÔºà„Ç™„Ç´„ÉÄÂÄã‰∫∫Áî®„ÅÆAWS„Ç¢„Ç´„Ç¶„É≥„ÉàÔºâ
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "ap-northeast-1"
          role-to-assume: "arn:aws:iam::187942436951:role/okada-deployer"
          role-duration-seconds: 3600
          role-session-name: "create-workato-role-cdk-test@GitHubActions"

      # „Åì„Åì„Åã„Çâ‚Üì„ÅåÊú¨Áï™„Å´ÈÅ©Áî®„Åô„ÇãÁî® ÔºàTODO: prod„Åó„Åã‰Ωø„Çè„Å™„ÅÑ„Åó„ÄÅ„Åπ„ÅüÊõ∏„Åç„Åß„ÅÑ„ÅÑ„Åã„ÇÇÔºü„ÇÇ„Åó„Åè„ÅØ„ÄÅtestÁí∞Â¢É„Å®„Åã„Åß„ÉÜ„Çπ„Éà„Åô„Çã„Åì„Å®„ÇÇË¶ãË∂ä„Åó„Å¶Áí∞Â¢ÉÂ§âÊï∞Âåñ„Åó„Å¶„Åä„ÅèÔºüÔºâ

      # - name: Set env to hr-gate-prod
      #   run: |
      #     echo "ROLE_TO_ASSUME=${{ secrets.ROLE_TO_ASSUME_GATE_PROD }}" >> $GITHUB_ENV
      #     echo "DEPLOY_TARGET=hr-gate-prod" >> $GITHUB_ENV
      #     echo "SLACK_CHANNEL=aws-infra_notify" >> $GITHUB_ENV

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: "ap-northeast-1"
      #     role-to-assume: "arn:aws:iam::${{ env.ROLE_TO_ASSUME }}:role/hr-deployer"
      #     role-duration-seconds: 3600
      #     role-session-name: "create-workato-role-cdk@GitHubActions"

      - name: checkout source
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "19" # node-version„ÅØorganization-iam„Å´„Å™„Çâ„Å£„Å¶19„Å´„Åó„Å¶„Åä„Åè

      - name: install aws-cdk
        run: npm install -g aws-cdk

      - name: cdk version
        run: cdk --version

      # - name: npm install
      #   run: |
      #         cd ./cdk
      #         npm install
      #         cdk deploy ${{ env.DEPLOY_TARGET }} --require-approval never
      #   env:
      #     AWS_DEFAULT_REGION: "ap-northeast-1"


# unchike „ÅÆ worklog„Åß„ÅØ„Éá„Éó„É≠„Ç§„Åô„ÇãÂâç„Å´‚Üì„Çí„ÇÑ„Å£„Å¶„Çã„ÄÇ
      # -   name: cdk synth
      #     run: cd ./unchike-worklog-iac && cdk synth
      #     env:
      #         AWS_DEFAULT_REGION: "ap-northeast-1"

      # -   name: cdk diff
      #     run: cd ./unchike-worklog-iac && cdk diff
      #     env:
      #         AWS_DEFAULT_REGION: "ap-northeast-1"

#            -   name: cdk bootstrap
#                run: cd ./unchike-worklog-iac && cdk bootstrap
#                env:
#                    AWS_DEFAULT_REGION: "ap-northeast-1"